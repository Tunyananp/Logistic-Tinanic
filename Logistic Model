getwd()
setwd("C:/Users/DELL/Desktop")

Titanic_data <- read.csv("https://raw.githubusercontent.com/kekecsz/SIMM61-Course-materials/main/Home_assignment/Titanic%20-%20training%20set.csv")

library(pscl)
library(lmtest)
library(dominanceanalysis)
library(tidyverse)
library(mice)

str(Titanic_data)

#Data management 

Titanic_sur <- Titanic_data %>%
  mutate(Sex = as.factor(Sex),
         Survived = as.factor(recode(Survived,
                                     "1" = "Yes",
                                     "0" = "No")),
         Age = as.numeric(Age),
         SiblingSpouses = as.numeric(SibSp),
         ParentChild = as.numeric(Parch),
         Ticketclass = as.factor(recode(Pclass,
                                        "1" = "1st",
                                        "2" = "2nd",
                                        "3" = "3rd")),
         Portembarked = as.factor(Embarked)) %>%
  select(Sex,
         Age,
         SiblingSpouses,
         ParentChild,
         Ticketclass,
         Portembarked,
         Survived)
         
#Checking Data 

view(Titanic_sur)
summary(Titanic_sur)

library(naniar)
n_miss(Titanic_sur)
miss_var_summary(Titanic_sur)
gg_miss_var(Titanic_sur)     


#Handling Missing Data 
#Mode of Port of embarkation is S (Southampton) so we will replace the missing values of Portembarked with "S" 

Titanic_sur$Portembarked[Titanic_sur$Portembarked==""] <- "S"
levels(Titanic_sur$Portembarked)
Titanic_sur$Portembarked <- droplevels(Titanic_sur$Portembarked)


#Using predictive mean matching for missing value of Age from  multiple imputation by chained equations

titanic_clean1 = Titanic_sur
titanicdata = mice(titanic_clean1, m = 5, method = c("","pmm","","","","", ""), maxit = 20)
titanicdata$imp$Age
cleantitanic = complete(titanicdata, 4)

#Descriptive and Exploratory data Analysis 

library(ggplot2)
cleantitanic %>%
  ggplot() +
  aes(x = Survived) + 
  geom_bar()

#probability of survival rate 
prop.table(table(cleantitanic$Survived))


cleantitanic %>%
  ggplot2::ggplot() +
  aes(x = Survived, fill= Sex) +
  geom_bar(position = position_dodge()) +
  geom_text(stat = "count",
            aes(label = stat(count)),
            position = position_dodge(width = 1), vjust =-0.5) +
  theme_classic()
  
  
  cleantitanic %>%
  ggplot() +
  aes(x = Ticketclass) + 
  geom_bar()
 
 cleantitanic %>%
  ggplot2::ggplot() +
  aes(x = Survived, fill= Ticketclass) +
  geom_bar(position = position_dodge()) +
  geom_text(stat = "count",
            aes(label = stat(count)),
            position = position_dodge(width = 1), vjust =-0.5) +
  theme_classic()
  
  cleantitanic %>%
  ggplot() +
  aes(x = Age) + 
  geom_bar()

cleantitanic$Divided.age = cut(cleantitanic$Age, c(0,10,20,30,40,50,60,70,80,100))

cleantitanic %>%
  ggplot2::ggplot() +
  aes(x = Divided.age, fill= Survived) +
  geom_bar(position = position_dodge()) +
  geom_text(stat = "count",
            aes(label = stat(count)),
            position = position_dodge(width = 1), vjust =-0.5) +
  theme_classic()
  
  cleantitanic %>%
  ggplot() +
  aes(x = ParentChild) + 
  geom_bar()

cleantitanic %>%
  ggplot2::ggplot() +
  aes(x = ParentChild, fill= Survived) +
  geom_bar(position = position_dodge()) +
  geom_text(stat = "count",
            aes(label = stat(count)),
            position = position_dodge(width = 1), vjust =-0.5) +
  theme_classic()
  
  cleantitanic %>%
  ggplot() +
  aes(x = SiblingSpouses) + 
  geom_bar()

cleantitanic %>%
  ggplot2::ggplot() +
  aes(x = SiblingSpouses, fill= Survived) +
  geom_bar(position = position_dodge()) +
  geom_text(stat = "count",
            aes(label = stat(count)),
            position = position_dodge(width = 1), vjust =-0.5) +
  theme_classic()
  
  cleantitanic %>%
  ggplot() +
  aes(x = Portembarked) + 
  geom_bar()

cleantitanic %>%
  ggplot2::ggplot() +
  aes(x = Portembarked, fill= Survived) +
  geom_bar(position = position_dodge()) +
  geom_text(stat = "count",
            aes(label = stat(count)),
            position = position_dodge(width = 1), vjust =-0.5) +
  theme_classic()
  
  cleantitanic %>%
  ggplot(aes(x = Age, y = ..count.., fill = Survived)) +
  geom_density(alpha = 0.2) +
  facet_grid(Ticketclass ~ Sex)
  
 #Logistic regression analysis

cleantitanic = cleantitanic %>%
  mutate(survival_rate_numeric = recode(Survived,
                                         "Yes" = 1,
                                         "No" = 0),
                               Gender = as.numeric(recode(Sex,
                                                          "male" = 1,
                                                          "female" = 0)))
                                                    
model1 = glm(survival_rate_numeric ~ Age + Gender + Ticketclass + SiblingSpouses + ParentChild + Portembarked,family = binomial(), data = cleantitanic )

summary(model1)

exp(cbind("Odds ratio" = coef(model1), confint.default(model1, level = 0.95))) #Odd Ratio and Confidence intervals 


#Sue survival rate with Leonardo on-board 

#Regression equation 

Sue_survival_Leo <- 4.46 + (-0.04)*4 + (-2.69)*0 + (-1.16)*0 + (-2.48)*1 + (-0.35)*0 + (-0.06)*2 + (-0.15)*0 + (-0.39)*1 

#Odds
exp(Sue_survival_Leo) 

#Probability 
3.70 / (1 + 3.70) #78% survival rate with Leonardo on-board
  
#Sue survival rate without Leonardo on-board

Sue_survival_noLeo <- 4.46 + (-0.04)*4 + (-2.69)*0 + (-1.16)*0 + (-2.48)*1 + (-0.35)*0 + (-0.06)*1 + (-0.15)*0 + (-0.39)*1 

#Odds
exp(Sue_survival_noLeo)

#Probability 
3.93 / (1 + 3.93) #79% Survival Rate without Leonardo on ship

#Kate survival rate with Leonardo on-board 

#Regression equation 
Kate_survival_Leo <- 4.46 + (-0.04)*20 + (-2.69)*0 + (-1.16)*0 + (-2.48)*1 + (-0.35)*1 + (-0.06)*1 + (-0.15)*0 + (-0.39)*1 


#Odds
exp(Kate_survival_Leo)

#Probability
 
1.46 / (1 + 1.46)  #59% with Leonardo on ship

#Kate survival rate without Leonardo on-board 

#Regression equation 
Kate_survival_noLeo <- 4.46 + (-0.04)*20 + (-2.69)*0 + (-1.16)*0 + (-2.48)*1 + (-0.35)*0 + (-0.06)*1 + (-0.15)*0 + (-0.39)*1 
 
#Odds
exp(Kate_survival_noLeo)

#Probability
2.07 / (1 + 2.07) #67% without Leonardo on ship

pR2(model1)
pR2(model1)["llh"]* -2
cleantitanic = cleantitanic %>%
  mutate(pred_model1 = predict(model1)) %>%
  mutate(pred_model1 = case_when(pred_model1 <= 0 ~ "No",
                                 pred_model1 > 0 ~ "Yes"))
                                 
 cleantitanic = cleantitanic %>%
  mutate(correct_prediction = case_when(pred_model1 == Survived ~ "correct",
                                        pred_model1 != Survived ~ "incorrect"))

cleantitanic %>%
  group_by(correct_prediction) %>%
  summarise(count = n()) %>%
  mutate(freq = count / sum(count))

 #Percentage of survived 
cleantitanic %>%
  group_by(Survived) %>%
  summarise(count = n()) %>%
  mutate(freq = count / sum(count))
  
  #crosstab of survived and predicted values
cleantitanic %>%
  group_by(Survived, pred_model1) %>%
  summarize(n = n()) %>%
  spread(Survived, n)
  
  #Survived

cleantitanic %>%
  filter(Survived == "Yes") %>%
  group_by(correct_prediction) %>%
  summarise(count = n()) %>%
  mutate(freq = count / sum(count))
  
  #Not Survived

cleantitanic %>%
  filter(Survived == "No") %>%
  group_by(correct_prediction) %>%
  summarise(count = n()) %>%
  mutate(freq = count / sum(count))
  
  null_model = glm(survival_rate_numeric ~ 1, family = binomial(),
                 data = cleantitanic)

summary(null_model)

lrtest(null_model, model1)
AIC(null_model, model1)

#Relative contribution of predictors 
dominance_model1 <- dominanceAnalysis(model1)
averageContribution(dominance_model1, fit.functions = "r2.m")
plot(dominance_model1,which.graph = "general", fit.function = "r2.m") + coord_flip()
